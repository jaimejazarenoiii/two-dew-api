# This is a basic workflow to help you get started with Actions

name: Deploy Docker (Dev)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout development
        uses: actions/checkout@v2

      - name: Build site assets
        working-directory: ${{ github.workspace }}
        run: ls -la
      - name: Install Ruby
        uses: ruby/setup-ruby@v1.59.0
        with:
          ruby-version: 2.5.8
          bundler-cache: true

      - name: Publish to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: jaimejazarenoiii/two-dew-api/two-dew
          registry: docker.pkg.github.com
          username: ${{ secrets.USERNAME_GITHUB }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          tags: latest
      - name: Deploy package to digitalocean
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HMAC_SECRET: ${{ secrets.HMAC_SECRET }}
          HMAC_ALGORITHM: ${{ secrets.HMAC_ALGORITHM }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN, HMAC_SECRET, HMAC_ALGORITHM, DATABASE_USERNAME, DATABASE_PASSWORD
          script: |
            docker stop $(docker ps -a -q)
            docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
            docker pull docker.pkg.github.com/jaimejazarenoiii/two-dew-api/two-dew:latest
            docker run -dit -p 80:3000 docker.pkg.github.com/jaimejazarenoiii/two-dew-api/two-dew:latest
